==================
SciON INSTALLATION
==================


Mac OS Prerequisites
====================

Install homebrew package manager
    > /usr/bin/ruby <(curl -fsSkL raw.github.com/mxcl/homebrew/go)
    Note: see 'brew doctor' for any issues with brew and 'brew update' often

Install python 2.7.x
    > brew install python --framework --universal

Basic packages
    > brew install git libevent libyaml zeromq rabbitmq hdf5 pkg-config netcdf udunits

Install postgres with postgis extension
    > brew install postgres postgis

    As user postgres:
    > createuser -s ion

Python packages and environment management:
    > easy_install pip

    > easy_install --upgrade virtualenv
    > easy_install --upgrade virtualenvwrapper
    Note: This require Mac's XCode with installed command line tools


Linux (Ubuntu) Prerequisites
============================

See misc/install/install_ubuntu.sh
Note: Only run this file on a new VM if you know what you are doing.
Check that no errors occurred during dependencies install.

Then follow manual steps in misc/install/install_ubuntu.txt


Common Installation
===================

Setup a virtualenv to run the SciON capability container:
    > mkvirtualenv --no-site-packages scion

Install special virtualenv dependencies:
    > pip install setuptools --upgrade
    > pip install numpy==1.7.1

Clone scioncc (this repository) in your code directory:
    > cd code   # Whatever your code repository directory is
    > git clone git@github.com:scionrep/scioncc.git

Use buildout to install the python package dependencies with:
    > python bootstrap.py -v 2.3.1
    > bin/buildout

Generate service definition interfaces and abstract base classes:
    > bin/generate_interfaces
    Note: These will be placed in the interfaces/ subdirectory.

Optional: You can establish a buildout cache by adding
    > mkdir ~/.buildout
    > vim ~/.buildout/default.cfg
# Paste this into file and edit home directory
[buildout]
eggs-directory = /Users/username/.buildout/eggs
download-cache = /Users/username/.buildout/dlcache


RUN-TIME DEPENDENCIES
=====================

POSTGRESQL (DATABASE):

Start postgresql (in a terminal or as a service) before starting the container or running tests:
    MacOS:
    > /usr/local/bin/postgres -D /usr/local/var/postgres
    Ubuntu Linux:
    > sudo service postgresql start


RABBITMQ (MESSAGE BROKER):
    MacOS:
    > rabbitmq-server
    Ubuntu Linux:
    > sudo service rabbitmq-server start


SOURCE PATH:

Add the current directory to your PYTHONPATH for an easier time running
scripts. Add the following line to your ~/.profile (create it if it
doesn't exist, or use bash_profile if you already have that):
    > export PYTHONPATH=.
