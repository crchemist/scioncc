==================
SciON INSTALLATION
==================


PREREQUISITES
=============

MAC OS:
-------

Install homebrew package manager - NOTE: DO NOT USE brew ON LINUX
    > ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    Note: see 'brew doctor' for any issues with brew and 'brew update' often

Install python 2.7.x
    > brew install python

Basic packages
    > brew install git libevent libyaml rabbitmq pkg-config

Install postgres with postgis extension
    > brew install postgres postgis

    As user postgres:
    > createuser -s ion

Python packages and environment management:
    > easy_install pip
    > easy_install --upgrade virtualenv
    > easy_install --upgrade virtualenvwrapper
    Note: This requires Mac's XCode with installed command line tools

Troubleshooting Mac OS Python install (tested on Mac OS 10.9):
    Sometimes, the system wide Python packages get outdated and errors like
    pkg_resources.DistributionNotFound appear.
    Always install and upgrade system packages with easy_install, not pip (if that's what
    you've used before, see above).
    In case of problems:
    > brew rm python
    Then delete outdated stuff out system site-packages directory:
    > cd `python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())"`
    The reinstall python, and redo above steps
    > brew install python
    > easy_install --upgrade pip stevedore setuptools virtualenv virtualenvwrapper


LINUX (UBUNTU):
---------------

Use a fresh Ubuntu 14.04 VM with latest patches:
    > sudo apt-get update
    > sudo apt-get upgrade

Execute dependencies install script (from repo root - only if you are comfortable):
    > sudo sh misc/install/install_ubuntu.sh

Set postgres superuser password and create users:
    > sudo -u postgres psql -U postgres -d postgres -c "alter user postgres with password 'xxxxx';"
    > sudo -u postgres createuser ion
    > sudo -u postgres psql -U postgres -d postgres -c "alter user ion with password 'xxxxx';"

Configure postgres:
    > sudo vim /etc/postgresql/9.3/main/pg_hba.conf
    # For rule all (1 line), change peer to md5 to enable password login
    > sudo service postgresql restart

Install virtualenv:
    > cd
    > mkdir .virtualenvs
    > cat <<EOF >> .profile
    export EDITOR="/usr/bin/vim"
    export WORKON_HOME="~/.virtualenvs"
    source /usr/share/virtualenvwrapper/virtualenvwrapper.sh
    EOF
    > source .profile


COMMON INSTALLATION
===================

Configure git:
    > git config --global user.email "name@email.com"
    > git config --global user.name "Full Name"
    > git config --global core.editor vim

Setup a virtualenv to run the SciON capability container:
    > mkvirtualenv --no-site-packages scion
    > pip install setuptools --upgrade

Clone scioncc (this repository) in your code directory:
    > cd code   # Whatever your code repository directory is
    > git clone git@github.com:scionrep/scioncc.git
    > cd scioncc

Use buildout to install the python package dependencies with:
    > python bootstrap.py -v 2.3.1
    > bin/buildout

Add current directory to PYTHONPATH (you can add this to your ~/.profile or
    bash_profile):
    > export PYTHONPATH=.

Generate service definition interfaces and abstract base classes:
    > bin/generate_interfaces
    Note: These will be placed in the interfaces/ subdirectory.

Optional: You can establish a buildout cache by adding
    > mkdir -p ~/.buildout/eggs ~/.buildout/dlcache
    > vim ~/.buildout/default.cfg
# Paste this into file and edit home directory
[buildout]
eggs-directory = /Users/username/.buildout/eggs
download-cache = /Users/username/.buildout/dlcache


RUN-TIME DEPENDENCIES
=====================

POSTGRESQL (DATABASE):

Start postgresql (in a terminal or as a service) before starting the container or running tests:
    MacOS:
    > /usr/local/bin/postgres -D /usr/local/var/postgres
    Ubuntu Linux:
    > sudo service postgresql start

RABBITMQ (MESSAGE BROKER):
    MacOS:
    > rabbitmq-server
    Ubuntu Linux:
    > sudo service rabbitmq-server start


DOCKER INSTALL
==============

Install a recent docker on Ubuntu 14.04:
    See https://docs.docker.com/installation/ubuntulinux/
    > curl -sSL https://get.docker.com/ubuntu/ | sudo sh

Get docker images for Scion CC, database and message broker:
    See https://registry.hub.docker.com/repos/scioncc/
    > sudo docker pull scioncc/scion_cc:3.0.0
    > sudo docker pull scioncc/scion_pg:9.4-1
    > sudo docker pull scioncc/scion_rabbitmq:1.0

See also:
    - https://github.com/phusion/baseimage-docker
