name: ingestion_management

docstring: |
    The ingestion service provides operations to setup data ingestion workers and the ingestion policy for each stream.
    The actual processing of data and metadata occurs in an ingestion worker process, not the ingestion service.

spec: https://confluence.oceanobservatories.org/display/syseng/CIAD+DM+OV+Ingestion+Management+Service

dependencies: [resource_registry, pubsub_management, transform_management, process_dispatcher, dataset_management]

methods:
  create_ingestion_configuration:
    docstring: Creates an ingestion configuration resource for a given exchange point. 
    in:
      name: ""
      # Exchanges are represented by names for now but will use exchange objects in the future
      exchange_point_id: ""
      # Each item in the queue should be an IngestionQueue object see obj/data/dm/ingestion.yml
      queues: []
    out:
      ingestion_configuration_id: ""

  update_ingestion_configuration:
    docstring: Update the attributes of the ingestion configuration.
    in:
      ingestion_configuration: !IngestionConfiguration
    out:

  read_ingestion_configuration:
    docstring: Retrieves an ingestion configuration object from the resource registry.
    in:
      ingestion_configuration_id: ""
    out:
      ingestion_configuration: !IngestionConfiguration
    throws:
      NotFound: if ingestion configuration did not exist

  delete_ingestion_configuration:
    docstring: |
        Deletes an ingestion configuration and all subscriptions which effectively 
        halts all activity on the queues.
    in:
      ingestion_configuration_id: ""
    out:
    throws:
      NotFound: The ingestion configuration id did not exist

  list_ingestion_configurations:
    docstring: Retrieves all ingestion configurations.
    in: 
       id_only: False
    out:
       configs: []

  #-------------------------

  persist_data_stream:
    docstring: |
        Launches an ingestion worker, subscribes the worker's queue to the stream
        and initializes the worker to begin consuming data.
    in:
      stream_id: ""
      ingestion_configuration_id: ""
      dataset_id: ""
      config: {}
    out:
      dataset_id: ""

  pause_data_stream:
    docstring: |
        Pauses an ingestion worker
    in:
      stream_id: ""
      ingestion_configuration_id: ""
    out:

  resume_data_stream:
    docstring: |
      Resumes an ingestion worker
    in:
      stream_id: ""
      ingestion_configuration_id: ""
    out:

  unpersist_data_stream:
    docstring: |
        Deletes the subscription, messages will no longer be collected or persisted.
    in:
      stream_id: ""
      ingestion_configuration_id: ""
    out:

  is_persisted:
    in:
      stream_id: ""
    out:
      persisted: True
