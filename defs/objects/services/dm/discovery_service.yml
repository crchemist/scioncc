name: discovery

docstring: |
   The Discovery service supports finding resources by metadata attributes, potentially applying semantic reasoning

spec: https://confluence.oceanobservatories.org/display/syseng/CIAD+DM+OV+Discovery+Service

dependencies: [resource_registry, catalog_management, index_management]

methods:
  # -----------------
  # Query operations

  query:
    docstring: |
      Issue a query provided in structured dict format or internal datastore query format.
      Returns a list of resource or event objects or their IDs only.
      Search_args may contain parameterized values.
      See the query format definition: https://confluence.oceanobservatories.org/display/CIDev/Discovery+Service+Query+Format
    in:
      query: {}
      id_only: True
      search_args: {}
    out:
      results: []

  query_view:
    docstring: |
      Execute an existing query as defined within a View resource, providing additional arguments for
      parameterized values.
      If ext_query is provided, it will be combined with the query defined by the View.
      Search_args may contain parameterized values.
      Returns a list of resource or event objects or their IDs only.
    in:
      view_id: ""
      view_name: ""
      ext_query: {}
      id_only: True
      search_args: {}
    out:
      results: []

  parse:
    docstring: |
      Parses a given string request and assembles the query, processes the query and returns the results of the query.
      See the query language definition: https://confluence.oceanobservatories.org/display/CIDev/Discovery+Service+Query+Format
    in:
      search_request: ""
      id_only: True
      search_args: {}
    out:
      results: []


  # -----------------
  # View management. Views are persisted parameterizable queries

  create_view:
    docstring: |
      Creates a view resource.
    in:
      view: !View
    out:
      view_id: ""
    throws:
      BadRequest: if object passed has _id or _rev attribute

  update_view:
    docstring: Update a View resource
    in:
      view: !View
    out:
    throws:
      BadRequest: if object does not have _id or _rev attribute
      NotFound: object with specified id does not exist
      Conflict: object not based on latest persisted object version
  
  read_view:
    docstring: Read a View resource
    in:
      view_id:     ""
    out:
      view: !View
    throws:
      NotFound: object with specified id does not exist

  delete_view:
    docstring: Delete a View resource
    in:
      view_id: ""
    out:
    throws:
      NotFound: object with specified id does not exist

  create_catalog_view:
    docstring: |
      Creates a view which has the specified search fields, the order in which the search fields are presented
      to a query and a term filter.
      @param view_name Name of the view
      @param description Simple descriptive sentence
      @param fields Search fields
      @param order List of fields to determine order of precendence in which the results are presented
      @param filter Simple term filter
    in:
      view_name:   ""
      description: ""
      fields:      []
      order:       []
      filters:     ""
    out:
      view_id:     ""

